local disabled = {};addEventHandler("onResourceStart", resourceRoot,	function()		for i,player in ipairs(getElementsByType("player")) do			if isPedDead (player) and exports.mtatr_accounts:isPlayerLoggedIn(player) then 				spawn(player);			end			end	end)function spawn(plr)	local player = plr or source;	if not isElement (player) then return; end	if disabled[plr] then return; end	if exports.mtatr_deathmatches:isPlayerInDeathmatch (player) then return; end	-- if exports.mtatr_jobs:isPlayerInJob (player) then return; end	fadeCamera (plr, false);	local chars = exports.database:getPlayerCharacters (player);	local char = exports.mtatr_accounts:getPlayerCurrentCharacter (player);	if chars[char] then 		if eventName == "onPlayerRequestSpawn" then 			triggerEvent ("onPlayerSpawnCharacter", player, char);		end		end		setTimer (		function(player)					if not isElement (player) then return; end			local chars = exports.database:getPlayerCharacters (player);			local char = exports.mtatr_accounts:getPlayerCurrentCharacter (player);			if chars[char] then 				local function g_data (data)					return exports.database:getPlayerCharacterData (player, char, data);				end					local location = g_data ("location");				local x, y, z = unpack (location);				local weapons = g_data ("weapons");				local model = g_data ("model");				local dim, int = g_data ("dim") or 0, g_data ("int") or 0;				spawnPlayer (player, x, y, z, 0, model, int, dim);				takeAllWeapons(player);				for i, v in ipairs (weapons) do 					giveWeapon (player, v.id, v.ammo);				end				else				exports.mtatr_hud:dm ("Bir hata oluştu!", player, 255, 0, 0);			end				fadeCamera (player, true);		end,	1000, 1, player);		endaddEvent ("onPlayerRequestSpawn");addEventHandler ("onPlayerRequestSpawn", root, spawn, true, "high+2");addEventHandler("onPlayerWasted", root,	function()		if exports.mtatr_accounts:isPlayerLoggedIn (source) then 			setTimer(spawn, 1800, 1, source);		end		end)function disableSpawnFor(player, state)	disabled[player] = state;end	