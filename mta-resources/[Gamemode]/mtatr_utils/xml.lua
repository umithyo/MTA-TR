local xml = {}function xmlToTable(path, full_path)	local cat, tbl = {}, {};	if not full_path then 		xml.root = xmlLoadFile(":"..getResourceName (sourceResource).."/"..path);	else		xml.root = xmlLoadFile (path);	end			for i, v in ipairs (xmlNodeGetChildren (xml.root)) do 			local hasSub = false;				table.insert (cat, xmlNodeGetAttribute (v, "name"));				if #xmlNodeGetChildren(v) >= 1 and xmlNodeGetName (xmlNodeGetChildren(v, 0)) == "group" then 			hasSub = true;		end		for _, val in ipairs (xmlNodeGetChildren(v)) do 						if not hasSub then 				table.insert (tbl, 					{						id = xmlNodeGetAttribute(val, "id"),						keywords = xmlNodeGetAttribute(val, "keywords"),						level = xmlNodeGetAttribute(val, "level"),						block = xmlNodeGetAttribute(v, "name"),						name = xmlNodeGetAttribute (val, "name")					}				);			end			if hasSub then 				for _, value in ipairs (xmlNodeGetChildren(val)) do 					table.insert (tbl, 						{							id = xmlNodeGetAttribute(value, "id"),							keywords = xmlNodeGetAttribute(value, "keywords"),							level = xmlNodeGetAttribute(value, "level"),							block = xmlNodeGetAttribute (v, "name"),							name = xmlNodeGetAttribute (value, "name"),							sub_block = xmlNodeGetAttribute (val, "name")						}											);				end				end			end		end		xmlUnloadFile (xml.root);	return cat, tbl;end	