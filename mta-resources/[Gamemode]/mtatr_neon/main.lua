function doesVehicleHaveNeon(vehicle)	if vehicle and getElementType(vehicle) == "vehicle" and getElementData(vehicle, "neon") then		local neons = getElementData(vehicle, "neon:neons")		if neons and type(neons) == "table" then			return true		end	end		return falseendfunction removeNeon(vehicle)	if doesVehicleHaveNeon(vehicle) then		local neons = getElementData(vehicle, "neon:neons")		if neons and type(neons) == "table" then			for _,neon in pairs(neons) do				if isElement (neon) and getElementType(neon) == "marker" then					detachElements(neon, vehicle)					destroyElement(neon)				end			end		end	end		removeElementData(vehicle, "neon")	removeElementData(vehicle, "neon:neons")	removeElementData(vehicle, "neon:colors")	removeElementData(vehicle, "neon:enabled")		return trueend	function addNeon(vehicle, r, g, b, a)	if vehicle and getElementType(vehicle) == "vehicle" then		removeNeon(vehicle)				local modelID = getElementModel(vehicle)		if modelID and type(modelID) == "number" and modelID > 0 and getVehicleType(modelID) == "Automobile" then			setElementData(vehicle, "neon", true, true)						r, g, b, a = tonumber("0".. tostring(r)) or 0, tonumber("0".. tostring(g)) or 0, tonumber("0".. tostring(b)) or 0, tonumber(a) or 150			local x, y, z = getElementPosition(vehicle)			local neons = { }			maxI = 5			for i = 1, maxI do				neons[i] = createMarker(x, y, z, "corona", 1.3, r, g, b, a)				if neons[i] then					setElementData(neons[i], "neon", true, true)					setElementData(neons[i], "vehicle", vehicle, true)					setElementData(neons[i], "offset", i, true)					setElementData (neons[i], "validmarker", true)					attachElements(neons[i], vehicle, 0, ((i - ((maxI * 0.5) + 0.5)) * 0.5), -1.5)				end			end						setElementData(vehicle, "neon:neons", neons, true)			setElementData(vehicle, "neon:colors", {red = r, green = g, blue = b, alpha = a}, true)			setElementData(vehicle, "neon:enabled", true, true)					return true		end	end		return falseendfunction setNeonColor(vehicle, r, g, b, a, notSave)	if doesVehicleHaveNeon(vehicle) then		local neons = getElementData(vehicle, "neon:neons")		if neons and type(neons) == "table" then			for k,neon in pairs(neons) do				if neon and getElementType(neon) == "marker" then					local colors = getElementData(vehicle, "neon:colors")					r, g, b, a = r or colors.red, g or colors.green, b or colors.blue, a or colors.alpha										setMarkerColor(neon, r, g, b, a)										if notSave ~= true then						setElementData(vehicle, "neon:colors", {red = r, green = g, blue = b, alpha = a}, true)					end									end			end		end	end		return falseendfunction isNeonLightsEnabled(vehicle)	if doesVehicleHaveNeon(vehicle) then		return getElementData(vehicle, "neon:enabled") or false	end		return falseendfunction setNeonLightsEnabled(vehicle, enabled)	if doesVehicleHaveNeon(vehicle) then		local colors = getElementData(vehicle, "neon:colors")		if enabled == false then			a = 0		else			a = colors.alpha		end				setNeonColor(vehicle, colors.red, colors.green, colors.blue, a, true)				setElementData(vehicle, "neon:enabled", enabled, true)	endendaddEventHandler("onVehicleExplode", getRootElement(), function()	removeNeon(source)end)addEventHandler("onElementDestroy", getRootElement(), function()	if getElementType(source) == "vehicle" then		removeNeon(source)	endend)addEventHandler ("onResourceStop", resourceRoot, 	function ()		for i, v in ipairs (getElementsByType"vehicle") do 			removeNeon (v);		end	end);