-- Made By XX3, from scratch with MS Notepad. Purpose: To make a new exotic compact HUD.-- You may edit this resource, but please credit me if you wanted to post an edited / extended version. -- PS: I was in MTA SA to show what Indonesia is really made of! :Dlocal money = 0;-- Weapon tables for ammo.		resourceroot = getResourceRootElement(getThisResource())	local noreloadweapons = {} --Weapons that doesn't reload (including the flamethrower, minigun, which doesn't have reload anim).	noreloadweapons[16] = true	noreloadweapons[17] = true	noreloadweapons[18] = true	noreloadweapons[19] = true	noreloadweapons[25] = true	noreloadweapons[33] = true	noreloadweapons[34] = true	noreloadweapons[35] = true	noreloadweapons[36] = true	noreloadweapons[37] = true	noreloadweapons[38] = true	noreloadweapons[39] = true	noreloadweapons[41] = true	noreloadweapons[42] = true	noreloadweapons[43] = true	local meleespecialweapons = {} --Weapons that don't shoot, and special weapons.	meleespecialweapons[0] = true	meleespecialweapons[1] = true	meleespecialweapons[2] = true	meleespecialweapons[3] = true	meleespecialweapons[4] = true	meleespecialweapons[5] = true	meleespecialweapons[6] = true	meleespecialweapons[7] = true	meleespecialweapons[8] = true	meleespecialweapons[9] = true	meleespecialweapons[10] = true	meleespecialweapons[11] = true	meleespecialweapons[12] = true	meleespecialweapons[13] = true	meleespecialweapons[14] = true	meleespecialweapons[15] = true	meleespecialweapons[40] = true	meleespecialweapons[44] = true	meleespecialweapons[45] = true	meleespecialweapons[46] = truefunction DXdraw()--Variables		if not getElementData (localPlayer, "loggedin") then return end		if not getElementData (localPlayer, "current.char") then return end		if isPlayerMapVisible() then return end				screenW, screenH = guiGetScreenSize() -- Getting the screen size		health = getElementHealth( getLocalPlayer() )		lineLength1 = screenW * 0.1139 * ( health / 100 ) -- Health bar				armor = getPedArmor( getLocalPlayer() )		lineLength2 = screenW * 0.1139 * ( armor / 100 ) -- Armor bar		oxy= getPedOxygenLevel( getLocalPlayer() )		lineLength3 = screenW * 0.1139  * ( oxy / 1001 )-- Armor bar				ammoinclip = getPedAmmoInClip (getLocalPlayer()) -- The ammo inside the clip		totalammo = getPedTotalAmmo(getLocalPlayer())-getPedAmmoInClip(getLocalPlayer()) -- The total ammo minus ammo inside clip		totalammo2 = getPedTotalAmmo(getLocalPlayer())		showammo1 = ammoinclip		showammo2 = totalammo		showammo3 = totalammo2		local hour, mins = getTime ()		time = hour .. ":" .. (((mins < 10) and "0"..mins) or mins) -- Time. This one makes the minutes always show by 2 digits (3:05 instead of 3:5)		local wantedlevel = getPlayerWantedLevel (getLocalPlayer()) --Getting the player's wanted level.				-------- Dynamic health colour thanks to 50p ----------		tick = getTickCount () 		-- For active health bar      local maxHealth = 100;  -- get max health stat		local colourPercent = ( health / maxHealth ) * 200;		local red, green; -- we don't need blue because we don't use it, it'll be 0		if health < ( maxHealth / 2 ) then		red = 200;		green = ( health / 50 ) * ( colourPercent * 2 );		elseif health == maxHealth then 		red = 255;		green = 170;	else		green = 200;		red = 200 - ( ( health - 50 ) / 50 ) * 200;end-- For inactive health bar		local maxHealth = 75;  -- get max health stat		local colourPercent1 = ( health / maxHealth ) * 75;		local red1, green1; -- we don't need blue because we don't use it, it'll be 0		if health < ( maxHealth / 2 ) then		red1 = 75;		green1 = ( health / 50 ) * ( colourPercent1 * 2 );		else		green1 = 75;		red1 = 75 - ( ( health - 50 ) / 50 ) * 75;endlocal color1 = tocolor( red1, green1, 0, 150 )local color2 = tocolor( red, green, 0, 200 )  -- For the health bar if getTickCount () %1500 < 500 and health <= 20 and getPedArmor (getLocalPlayer()) <=0 then -- If health is less than 20%, armor is 0%, the health bar will blink by hiding the health bar every 1.5 seconds.  else 	dxDrawRectangle(screenW * 0.8153, screenH * 0.1333, screenW * 0.1139, screenH * 0.0222, color1, false) -- health passive	dxDrawRectangle(screenW * 0.8153, screenH * 0.1333, lineLength1, screenH * 0.0222, color2, false) -- health active end  if getPedArmor (localPlayer) > 0 then 		dxDrawRectangle(screenW * 0.8153, screenH * 0.0944, screenW * 0.1139, screenH * 0.0222, tocolor(65, 65, 65, 255), false) -- armor passive	dxDrawRectangle(screenW * 0.8153, screenH * 0.0944, lineLength2, screenH * 0.0222, tocolor(125, 125, 125, 255), false) -- armor activeend	   if isElementInWater(getLocalPlayer()) then   	dxDrawRectangle(screenW * 0.8153, screenH * 0.0944, screenW * 0.1139, screenH * 0.0222, tocolor(111, 151, 163, 150), false) -- oxy passive	dxDrawRectangle(screenW * 0.8153, screenH * 0.0944, lineLength3, screenH * 0.0222, tocolor(151,191,203,200), false) -- oxy activeendlocal cashAmountToDraw = money;local cashMoney = getPlayerMoney ();if cashAmountToDraw < cashMoney then	local addMoney = math.floor((cashMoney - cashAmountToDraw) / ((cashMoney - cashAmountToDraw) % 50 + 20))	if addMoney < 5 then		addMoney = 5	end	cashAmountToDraw = cashAmountToDraw + addMoney	if cashAmountToDraw > cashMoney then		cashAmountToDraw = cashMoney	end		money = cashAmountToDraw;elseif cashAmountToDraw > cashMoney then	local removeMoney = math.floor((cashAmountToDraw - cashMoney) / ((cashAmountToDraw - cashMoney) % 50 + 20))	if removeMoney < 5 then		removeMoney = 5	end	cashAmountToDraw = cashAmountToDraw - removeMoney	if cashAmountToDraw < cashMoney then		cashAmountToDraw = cashMoney	end	money = cashAmountToDraw;enddxDrawText(money.."₺", screenW * 0.8111, screenH * 0.0478, screenW * 0.9931, screenH * 0.0767, tocolor(0,0,0,200), 1.25, "pricedown", "right", "center", false, false, false, false, false) -- moneydxDrawText(money.."₺", (screenW * 0.8111) - 2, (screenH * 0.0478) -3, (screenW * 0.9931) -2, (screenH * 0.0767) -3, tocolor(0,100,0,220), 1.25, "pricedown", "right", "center", false, false, false, false, false) -- money shadowdxDrawRectangle(screenW * 0.9361, screenH * 0.0944, screenW * 0.0611, screenH * 0.0611, tocolor(0, 0, 0, 138), false) -- time recdxDrawText(time, screenW * 0.9396, screenH * 0.0989, screenW * 0.9903, screenH * 0.1511, tocolor(255, 255, 255, 255), 1.30, "diploma", "center", "center", false, false, false, false, false) -- time------- Weapon icons & Ammo DX drawingslocal weaponID = getPedWeapon (getLocalPlayer()); -- Get weapon ID dxDrawImage(screenW * 0.7507, screenH * 0.0878, screenW * 0.0535, screenH * 0.0844, "icons/".. tostring( weaponID ) .. ".png", 0, 0, 0, tocolor(255, 255, 255, 255), false) --weapon -- now decide if the optional stuff should be drawnif noreloadweapons [getPedWeapon(getLocalPlayer())] thendxDrawText(tostring (showammo3),  screenW * 0.7507, screenH * 0.1722, screenW * 0.8042, screenH * 0.1944, tocolor(255, 255, 255, 255), 1.00, "default", "center", "top", false, false, false, false, false) -- ammo	elseif meleespecialweapons [getPedWeapon(getLocalPlayer())] then-- Draw Nothing for melee and special weapons.else --Weapons that reloads.		dxDrawText(tostring (showammo2).. " | "..showammo1, screenW * 0.7493, screenH * 0.1722, screenW * 0.7972, screenH * 0.1944, tocolor(255, 255, 255, 255), 1.00, "default", "center", "top", false, false, false, false, false) -- ammoendif wantedlevel == 0 then					-- Draw nothing (Wanted level 0)			elseif wantedlevel == 1 then					dxDrawImage(screenW-21,screenH-212,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-190,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-168,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-148,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-126,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-105,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false) -- Wanted level 1						elseif wantedlevel == 2 then					dxDrawImage(screenW-21,screenH-212,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-190,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-168,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-148,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-126,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false) -- Wanted level 2					dxDrawImage(screenW-21,screenH-105,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)								elseif wantedlevel == 3 then					dxDrawImage(screenW-21,screenH-212,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-190,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-168,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-148,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false) -- Wanted level 3					dxDrawImage(screenW-21,screenH-126,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-105,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)								elseif wantedlevel == 4 then					dxDrawImage(screenW-21,screenH-212,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-190,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-168,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false) -- Wanted level 4					dxDrawImage(screenW-21,screenH-148,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-126,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-105,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)								elseif wantedlevel == 5 then					dxDrawImage(screenW-21,screenH-212,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(0,0,0,100),false)					dxDrawImage(screenW-21,screenH-190,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false) -- Wanted level 5					dxDrawImage(screenW-21,screenH-168,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-148,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-126,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-105,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)			else					dxDrawImage(screenW-21,screenH-212,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false) -- Wanted level 6					dxDrawImage(screenW-21,screenH-190,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-168,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-148,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-126,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)					dxDrawImage(screenW-21,screenH-105,16.0,19.0,"images/star.png",0.0,0.0,0.0,tocolor(255,255,255,255),false)end		end -- End of the DX Drawing function-------- HUD toogle command functions.function hudChanger ()	showHud();endaddCommandHandler ( "showhud", hudChanger ) -- Shows the Alternate HUDaddCommandHandler ( "hidegtahud", hudChanger ) -- Hides the GTA HUD addEventHandler( "onClientResourceStart", resourceroot, hudChanger ) addEventHandler("onPlayerJoin", resourceroot, hudChanger ) -- The same, but also on player join.function hudChanger2 ()	 removeEventHandler("onClientRender", getRootElement(), DXdraw)    setPlayerHudComponentVisible ( "armour", true )        setPlayerHudComponentVisible ( "health", true )     setPlayerHudComponentVisible ( "money", true )    setPlayerHudComponentVisible ( "clock", true )    setPlayerHudComponentVisible ( "weapon", true )    setPlayerHudComponentVisible ("ammo", true)    setPlayerHudComponentVisible ( "money", true)	 setPlayerHudComponentVisible ( "wanted", true )endaddCommandHandler ( "hidehud", hudChanger2) -- Removes the HUD, and shows the GTA HUD.addCommandHandler ( "showgtahud", hudChanger2) addEventHandler("onClientResourceStop", resourceroot, hudChanger2) -- When you stop the resource, executes.function hudChanger3 ()	 removeEventHandler("onClientRender", getRootElement(), DXdraw)	 setPlayerHudComponentVisible ("all", false)endaddCommandHandler ( "hideall", hudChanger3 ) -- Shows the Alternate HUDfunction radarcommand1 ()		setPlayerHudComponentVisible ("radar", true)endaddCommandHandler( "showradar", radarcommand1 )function radarcommand2 ()		setPlayerHudComponentVisible ("radar", false)endaddCommandHandler( "hideradar", radarcommand2 )function showHud ()	if not getElementData (localPlayer, "loggedin") then return end	if not getElementData (localPlayer, "current.char") then return end	if isPlayerMapVisible() then return end	removeEventHandler("onClientRender", getRootElement(), DXdraw)	addEventHandler("onClientRender", getRootElement(), DXdraw)	setPlayerHudComponentVisible ( "armour", false )    setPlayerHudComponentVisible ( "health", false )	setPlayerHudComponentVisible ("breath", false)    setPlayerHudComponentVisible ( "money", false )    setPlayerHudComponentVisible ( "clock", false )    setPlayerHudComponentVisible ( "weapon", false )    setPlayerHudComponentVisible ("ammo", false)    setPlayerHudComponentVisible ( "money", false )	setPlayerHudComponentVisible ( "wanted", false )	setPlayerHudComponentVisible ("radar", true)	setPlayerHudComponentVisible ("area_name", false)	setPlayerHudComponentVisible ("vehicle_name", false)endfunction hideHud ()	removeEventHandler("onClientRender", getRootElement(), DXdraw)	setPlayerHudComponentVisible ( "armour", false )    setPlayerHudComponentVisible ( "health", false )    setPlayerHudComponentVisible ( "money", false )	setPlayerHudComponentVisible ("breath", false)    setPlayerHudComponentVisible ( "clock", false )    setPlayerHudComponentVisible ( "weapon", false )    setPlayerHudComponentVisible ("ammo", false)    setPlayerHudComponentVisible ( "money", false )	setPlayerHudComponentVisible ( "wanted", false )	setPlayerHudComponentVisible ("radar", false)	setPlayerHudComponentVisible ("area_name", false)	setPlayerHudComponentVisible ("vehicle_name", false)endfunction addOutlines(x, y, width, height, lineColor, lineSize, postGUI)    dxDrawLine(x - 1, (y - lineSize), x - 1, y + height + (lineSize - 1), lineColor, lineSize, postGUI); --left     dxDrawLine(x + width, (y) - 1, (x) - 1, (y) - 1, lineColor, lineSize, postGUI); -- top    dxDrawLine((x) - 1, y + height, x + width, y + height, lineColor, lineSize, postGUI); -- bottom    dxDrawLine(x + width, y - lineSize, x + width, y + height + (lineSize - 1), lineColor, lineSize, postGUI); -- rightend